name: Code Check

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  code-check:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up PHP environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'

      - name: Install PHP dependencies
        run: composer install --no-progress

      - name: Install PHP CodeSniffer
        run: composer global require squizlabs/php_codesniffer

        # Step 3: Lint PHP Code (No Auto-Fix)
      - name: Lint PHP Code
        run: $(composer global config home)/vendor/bin/phpcs --standard=PSR12 --ignore=node_modules,vendor . || true



      # Step 4: Set up Node.js for JavaScript, CSS, and HTML checks
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: npm install

      - name: Fix ESLint Permissions
        run: chmod +x ./node_modules/.bin/eslint

      - name: Run ESLint for JavaScript
        run: npx eslint . || true
      
      - name: Install Stylelint
        run: npm install stylelint --save-dev  
       
      - name: Fix Stylelint Permissions
        run: chmod +x ./node_modules/.bin/stylelint
        
      - name: Run Stylelint for CSS
        run: npx stylelint "**/*.css" || true

      - name: Install HTMLHint
        run: npm install htmlhint --save-dev

      - name: Fix HTMLHint Permissions
        run: chmod +x ./node_modules/.bin/htmlhint
      
      - name: Run HTMLHint (Excluding Vendor)
        run: npx htmlhint "**/*.html" --ignore "vendor/**" || true
    

      # Step 5: (Optional) Run tests if applicable
      - name: Run tests
        run: |
          # Add commands for your testing tools here
          echo "No tests configured yet"

# Step 6: Send email if errors are found
      - name: Send Email Notification
        run: |
          echo "Sending email notification for repository update."
          sudo apt-get install msmtp -y

          # Configuring msmtp to send mail via SMTP
          echo "account default" > ~/.msmtprc
          echo "host smtp.gmail.com" >> ~/.msmtprc
          echo "port 587" >> ~/.msmtprc
          echo "auth on" >> ~/.msmtprc
          echo "user ${{ secrets.SMTP_USER }}" >> ~/.msmtprc
          echo "password ${{ secrets.SMTP_PASSWORD }}" >> ~/.msmtprc
          echo "from ${{ secrets.SMTP_FROM_EMAIL }}" >> ~/.msmtprc
          echo "tls on" >> ~/.msmtprc
          echo "logfile ~/.msmtp.log" >> ~/.msmtprc

          # Send an email notification every time
          echo -e "Subject: Repository Update - Linting Report\n\nA repository update has occurred. Please check the linting results.\n\nPHP Linting: ${{ steps.lint-php.outcome }}\nJavaScript Linting: ${{ steps.lint-js.outcome }}\nCSS Linting: ${{ steps.lint-css.outcome }}\nHTML Linting: ${{ steps.lint-html.outcome }}" | msmtp ${{ secrets.RECIPIENT_EMAIL }}
